<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–¢–∞—Ä–æ API - GitHub Pages</title>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            max-width: 800px; 
            margin: 0 auto; 
            padding: 20px; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        .container { 
            background: rgba(0, 0, 0, 0.8); 
            padding: 30px; 
            border-radius: 15px; 
            margin-top: 50px;
        }
        .endpoint { 
            background: #2d3748; 
            padding: 15px; 
            border-radius: 5px; 
            margin: 10px 0; 
            font-family: monospace;
            color: #68d391;
        }
        .test-btn { 
            background: #ffd700; 
            color: black; 
            padding: 10px 20px; 
            border: none; 
            border-radius: 5px; 
            cursor: pointer; 
            font-weight: bold;
            margin: 10px 0;
        }
        #result { 
            background: white; 
            color: black; 
            padding: 15px; 
            border-radius: 5px; 
            margin-top: 20px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üé¥ –¢–∞—Ä–æ API –Ω–∞ GitHub Pages</h1>
        
        <div class="endpoint">
            üìç URL –¥–ª—è StreamElements: 
            <strong>https://raw.githubusercontent.com/KRYSTa1-1/taronew/refs/heads/main/taronew.js</strong>
        </div>

        <button class="test-btn" onclick="testTarot()">üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API</button>
        
        <div id="result"></div>

        <div class="endpoint">
            üí´ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è StreamElements:<br><br>
            $(eval 
            url="https://raw.githubusercontent.com/KRYSTa1-1/taronew/refs/heads/main/taronew.js"; 
            fetch = "$(customapi " + url + ")"; 
            card = fetch.@json(@path(.card)); 
            meaning = fetch.@json(@path(.meaning)); 
            `$(user), —Ç–≤–æ—è –∫–∞—Ä—Ç–∞: ${card} ‚û° ${meaning}`
            )
        </div>
    </div>

    <script src="tarot-api.js"></script>
    <script>
        async function testTarot() {
            try {
                const response = await fetch('tarot-api.js');
                const scriptContent = await response.text();
                
                // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
                const script = document.createElement('script');
                script.textContent = scriptContent;
                document.head.appendChild(script);
                
                // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
                if (window.getRandomTarot) {
                    const cardData = window.getRandomTarot();
                    document.getElementById('result').innerHTML = `
                        <h3>‚úÖ –°–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∞:</h3>
                        <p><strong>üé¥ –ö–∞—Ä—Ç–∞:</strong> ${cardData.card}</p>
                        <p><strong>üìñ –ó–Ω–∞—á–µ–Ω–∏–µ:</strong> ${cardData.meaning}</p>
                        <p><strong>üïí –í—Ä–µ–º—è:</strong> ${new Date(cardData.timestamp).toLocaleTimeString()}</p>
                    `;
                    document.getElementById('result').style.display = 'block';
                }
                
                document.head.removeChild(script);
            } catch (error) {
                document.getElementById('result').innerHTML = `
                    <p style="color: red;">‚ùå –û—à–∏–±–∫–∞: ${error.message}</p>
                `;
                document.getElementById('result').style.display = 'block';
            }
        }
    </script>
</body>
</html>
